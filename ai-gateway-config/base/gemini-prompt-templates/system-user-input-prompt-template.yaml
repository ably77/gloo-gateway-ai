apiVersion: trafficcontrol.policy.gloo.solo.io/v2
kind: TransformationPolicy
metadata:
  name: gemini-system-user-input-prompt-template
  namespace: ai-gateway-ws-config
spec:
  applyToRoutes:
  - route:
      labels:
        prompt-template: gemini-system-user-input
  config:
    request:
      injaTemplate:
        # if x-api-key header is present, append variable as a query param, else route to original path
        headers:
          :path:
            text: '{% if header("x-api-key") != "" %}/gemini?key={{ api_key }}{% else %}{{ original_path }}{% endif %}'
        # input prompt template
        body:
          text: |
            {
              "model": "{{ llm_model }}",
              "messages": [
                {
                  "role": "system",
                  "content": "{{ system_prompt }}"
                },
                {
                  "role": "user",
                  "content": "{{ user_prompt }}"
                }
              ],
              "generation_config": {
                "temperature": {% if header("x-temp") != "" %}{{ temperature }}{% else %}0.7{% endif %},
                "maxOutputTokens": 250
              }
            }
        extractors:
          # extracts an x-api-key header var
          api_key:
            header: 'x-api-key'
            regex: '.*'
          # extracts x-model header var
          llm_model:
            header: 'x-model'
            regex: '.*'
          # extracts x-system-prompt header var
          system_prompt:
            header: 'x-system-prompt'
            regex: '.*'
          # extracts x-system-prompt header var
          user_prompt:
            header: 'x-user-prompt'
            regex: '.*'
          # extracts pseudo-path header var
          original_path:
            header: ':path'
            regex: '.*'
          # extracts x-temp header var
          temperature:
            header: 'x-temp'
            regex: '.*'
